{"version":3,"sources":["src/Collidable.js","src/Scene.js","src/Stage.js","src/Control.js","src/Puppet.js","src/Game.js","index.js"],"names":["Collidable","tag","solid","classList","contains","platform","elastic","deadly","offsetLeft","offsetTop","offsetWidth","offsetHeight","Scene","document","querySelector","line_to_scroll","_scroll_x","scroll_x_start","collisionMap","querySelectorAll","forEach","object","push","scroll","x","clientWidth","clientHeight","parseInt","style","left","y","top","Stage","addEventListener","e","Control","console","log","keys","a","key","up","right","down","repeat","translateKeyboard","size","tile","source","w","h","target","tiles","canvas","Number","prototype","inRange","b","n","Puppet","classe","calcX","calcY","speedX","animation","speedY","velocity_x","velocity_x_jump","releaseA","velocity_y","gravity","Math","abs","speed_limit_y","width","height","gameOver","collides","bottom","scroll_x","friction","direction","add","remove","_speedX","lives","parseFloat","toFixed","speedx","Game","puppet","update","ticks","thisLoop","Date","lastLoop","frameTime","thisFrameTime","filterStrength","window","clearInterval","gameInterval","newGame","error","respawnPlayer","play","display","setInterval","gameLoop","fps"],"mappings":"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","file":"engine.83953c04.js","sourceRoot":"..","sourcesContent":["class Collidable {\n\tconstructor(tag) {\n\t\tthis.tag = tag;\n\t\tthis.solid = this.tag.classList.contains('solid');\n\t\tthis.platform = this.tag.classList.contains('platform');\n\t\tthis.elastic = this.tag.classList.contains('elastic');\n\t\tthis.deadly = this.tag.classList.contains('deadly');\n\t}\n\n\tget x (){ return this.tag.offsetLeft; }\n\tget y (){ return this.tag.offsetTop; }\n\n\tget width (){ return this.tag.offsetWidth; }\n\tget height (){ return this.tag.offsetHeight; }\n}\n\nexport {Collidable as default};\n","import Collidable from './Collidable'\n\nclass Scene {\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Scene');\n\n\t\tthis.line_to_scroll = 128;\n\t\tthis._scroll_x = 0;\n\t\tthis.scroll_x_start = 0;\n\n\t\tthis.collisionMap = [];\n\t\tdocument.querySelectorAll('.Collidable').forEach((object)=>{\n\t\t\t\tthis.collisionMap.push(new Collidable(object));\n\t\t});\n\t}\n\n\tget scroll_x(){\n\t\treturn this._scroll_x;\n\t}\n\tset scroll_x(scroll){\n\t\tthis.x = -scroll;\n\t\tthis._scroll_x = scroll;\n\t}\n\n\tget width (){ return this.tag.clientWidth; }\n\tget height (){ return this.tag.clientHeight; }\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseInt(x);\n\t\tif(x != this.x){\n\t\t\t// console.log('x', x, 'velocity_x',  this.velocity_x);\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseInt(y);\n\t\tif(y != this.y){\n\t\t\t// console.log(y);\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\n}\n\nexport default new Scene();\n","class Stage {\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Stage');\n\t}\n\n\tget width (){ return this.tag.clientWidth; }\n\tget height (){ return this.tag.clientHeight; }\n}\nexport default new Stage();\n","document.addEventListener(\"keydown\", (e)=>{\n}, false);\n\n\nclass Control {\n\tconstructor(){\n\t\tthis.keys = {\n\t\t\tup: false,\n\t\t\tright: false,\n\t\t\tdown: false,\n\t\t\tleft: false,\n\t\t\ta: false\n\t\t};\n\t\tdocument.addEventListener(\"keydown\", (e)=>{\n\t\t\tif(!e.repeat){\n\t\t\t\tthis.keys[this.translateKeyboard(e.key)] = true;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener(\"keyup\", (e)=>{\n\t\t\tif(!e.repeat){\n\t\t\t\tthis.keys[this.translateKeyboard(e.key)] = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tget up(){ return this.keys.up; }\n\tget right(){ return this.keys.right; }\n\tget down(){ return this.keys.down; }\n\tget left(){ return this.keys.left; }\n\tget a(){ return this.keys.a; }\n\treleaseA=()=>{ console.log(this.keys.a, '<'); this.keys.a = false;}\n\n\ttranslateKeyboard  = (key)=>{\n\t\tif(key == \"ArrowUp\") return 'up';\n\t\tif(key == \"ArrowRight\") return 'right';\n\t\tif(key == \"ArrowDown\") return 'down';\n\t\tif(key == \"ArrowLeft\") return 'left';\n\t\tif(key == \"a\" || key == \"A\" ) return 'a';\n\t\treturn '';\n\t}\n}\n\nexport default new Control();\n","import Game from \"./Game\";\nimport Scene from './Scene';\nimport Stage from './Stage';\nimport Control from './Control';\n\nvar size = {\n    tile:{ // size of tiles\n        source:{w:16, h:16},\n        target:{w:32, h:32}\n    },\n    tiles:{ // number of tiles\n        target:{w:1, h:1} // this is set dynamically depending on the canvas size\n    },\n    canvas:{w:1, h:1} // the canvas size is read from the actual html\n};\nNumber.prototype.inRange = function (a, b) {\n    var n = +this;\n    return ( n >= a && n <= b );\n};\n\nclass Puppet {\n\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Puppet');\n\t\tthis.velocity_x=1.5;\n\t\tthis.velocity_x_jump=1.0;\n\t\tthis.velocity_y=22;\n\t\tthis.gravity=3;\n\t\tthis.friction=0.8;\n\t\tthis.speed_limit_y=10;\n\n\t\tthis._speedX=0;\n\t\tthis.speedY=0;\n\n\t\tthis.lives=3;\n\n\t\tthis.animation('right');\n\t}\n\n\tanimation = (classe)=>{\n\t\tthis.tag.classList = \"Puppet \"+classe;\n\t}\n\tupdate = ()=>{\n\t\tlet calcX = this.x;\n\t\tlet calcY = this.y;\n\n\t\t// this.tag.style.backgroundPosition = \"-209px 0\";\n\n\t\tif(!Control.right && !Control.left){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('left');\n\t\t\t}else{\n\t\t\t\tthis.animation('right');\n\t\t\t}\n\t\t}\n\t\tif (Control.up) {\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('lookup-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('lookup-right');\n\t\t\t}\n\t\t}\n\t\tif(Control.down) {\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('lower-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('lower-right');\n\t\t\t}\n\t\t}\n\t\tif (this.speedY == 0) {\n\t\t\tif (Control.left) {\n\t\t\t\t// if(this.speedX > 0){\n\t\t\t\t// \tconsole.warn('run with SMOKE left');\n\t\t\t\t// }else{\n\t\t\t\t// }\n\t\t\t\tthis.animation('walk-left');\n\t\t\t\tthis.speedX -= this.velocity_x;\n\t\t\t} else if (Control.right) {\n\t\t\t\t// if(this.speedX < 0){\n\t\t\t\t// \tconsole.warn('run with SMOKE right');\n\t\t\t\t// }else{\n\t\t\t\t// }\n\t\t\t\tthis.animation('walk-right');\n\t\t\t\tthis.speedX += this.velocity_x;\n\t\t\t}\n\t\t}else {\n\t\t\tif (Control.left) {\n\t\t\t\tthis.speedX -= this.velocity_x_jump;\n\t\t\t} else if (Control.right) {\n\t\t\t\tthis.speedX += this.velocity_x_jump;\n\t\t\t}\n\t\t}\n\t\tif (Control.a && this.speedY == 0) {\n\t\t\tControl.releaseA();\n\t\t\tthis.speedY -= this.velocity_y;\n\t\t}\n\n\t\tif(this.speedY < 0){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('jumping-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('jumping-right');\n\t\t\t}\n\t\t}else if(this.speedY > 0){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('falling-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('falling-right');\n\t\t\t}\n\t\t}\n\n\n\t\t// apply gravity.\n\t\tthis.speedY += this.gravity;\n\t\tif (Math.abs(this.speedY) < 0.1) this.speedY = 0;\n\n\t\t// apply speed limit when falling down\n\t\tif (this.speedY > this.speed_limit_y) {\n\t\t\tthis.speedY = this.speed_limit_y;\n\t\t}\n\n\t\tcalcX += this.speedX;\n\t\tcalcY += this.speedY;\n\n\t\t// block on level edge\n\t\tif (calcX < 0) {\n\t\t\tcalcX = 0;\n\t\t} else if (calcX + this.width > Scene.width) {\n\t\t\tcalcX = Scene.width - this.width;\n\t\t}\n\t\t// die on level bottom\n\t\tif (calcY > Scene.height) {\n\t\t\tGame.gameOver();\n\t\t}\n\n\t\t// add visible items + actors to collision check\n\t\t// todo: only add visible items\n\t\tScene.collisionMap.forEach((object)=>{\n\n\n\t\t\tvar collides = {top:false, bottom:false, left:false, right:false};\n\t\t\t// we are below or above an object (use the middle of the actor, with tolerance)\n\t\t\tif ((calcX + this.width / 2).inRange(object.x - 0.25, object.x + object.width + 1.25)) {\n\t\t\t\t// check bounce bottom:\n\t\t\t\tif ((calcY + this.height).inRange(object.y, object.y + object.height - 1) && calcY < object.y) {\n\t\t\t\t\tcollides.bottom = true;\n\t\t\t\t// check bounce top:\n\t\t\t\t} else if (calcY.inRange(object.y, object.y + object.height)) {\n\t\t\t\t\tcollides.top = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// we are right or left of an object\n\t\t\tif ((calcY + this.height / 2).inRange(object.y - 0.25, object.y + object.height + 1.25)) {\n\t\t\t\t// check bounce right\n\t\t\t\tif ((calcX + this.width).inRange(object.x, object.x + object.width)) {\n\t\t\t\t\tcollides.right = true;\n\t\t\t\t}\n\t\t\t\t// check bounce left\n\t\t\t\tif (calcX.inRange(object.x, object.x + object.width)) {\n\t\t\t\t\tcollides.left = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.solid) {\n             if (collides.top) {\n                 // if (object.type == 'block_coin') {\n                 //     replaceLevelSpriteXY(object.x, object.y, \"ß\");\n                 //     items.push({ sx:8, sy:9, x:object.x, y:(object.y - size.tile.target.h), type:'coin' });\n                 // } else {\n                     calcY = object.y + this.height;// + size.tile.target.h;\n                     this.speedY = 1;\n                 // }\n             } else if (collides.bottom) {\n                 // jump on enemy\n                 // if (object.type == 'enemy_mushroom') {\n                 //     object.deadly = false\n                 //     object.speed = 0\n                 //     object.sx = 2\n                 //     score++;\n                 //     sound_jump_on_enemy()\n                 // }\n                 calcY = object.y - this.height;\n                 this.speedY = 0;\n             } else if (collides.right) {\n                 calcX = object.x - this.width;\n                 this.speedX = 0;\n             } else if (collides.left) {\n                 calcX = object.x + this.width;//+ size.tile.target.w;\n                 this.speedX = 0;\n             }\n         }else if (object.platform) {\n\t\t\t\tif (collides.bottom) {\n\t\t\t\t\tif(this.speedY > 0){\n\t\t\t\t\t\tcalcY = object.y - this.height;\n\t\t\t\t\t\tthis.speedY = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n         }\n\n\t\t\t// const collides = this.checkCollision(object);\n\n\t\t    // apply collision to player movement\n\t\t    // special actions on collisions\n\t\t    // if (object.solid) {\n\t\t    //     if (collides.top) {\n\t\t    //         // if (object.type == 'block_coin') {\n\t\t    //         //     replaceLevelSpriteXY(object.x, object.y, \"ß\");\n\t\t    //         //     items.push({ sx:8, sy:9, x:object.x, y:(object.y - size.tile.target.h), type:'coin' });\n\t\t    //         // } else {\n\t\t\t\t// \t\t// if\n\t\t    //             this.y = object.y-object.height;\n\t\t    //             this.speedY = 0;\n\t\t    //         // }\n\t\t    //     } else if (collides.bottom) {\n\t\t    //         // jump on enemy\n\t\t    //         // if (object.type == 'enemy_mushroom') {\n\t\t    //         //     object.deadly = false\n\t\t    //         //     object.speed = 0\n\t\t    //         //     object.sx = 2\n\t\t    //         //     score++;\n\t\t    //         //     sound_jump_on_enemy()\n\t\t    //         // }\n\t\t\t\t// \t\tthis.y = object.y+object.height;\n\t\t\t\t// \t\tthis.speedY = 0;\n\t\t    //     } else if (collides.right) {\n\t\t    //         this.x = object.x - this.width;\n\t\t    //         this.speedX = 0;\n\t\t    //     } else if (collides.left) {\n\t\t    //         this.x = object.x + size.tile.target.w;\n\t\t    //         this.speedX = 0;\n\t\t    //     }\n\t\t    // }\n\n\t\t    // collide from any side\n\t\t    if (collides.top || collides.bottom || collides.right || collides.left) {\n\t\t        if (object.deadly == true) {\n\t\t            //items.push({ sx:, sy:9, x:this.x, y:this.y, deadly:false, type:'looser' });\n\t\t\t\t\t\tGame.gameOver()\n\t\t        }\n\t\t    //     if (object.type == 'exit') {\n\t\t    //         levelWin()\n\t\t    //     }\n\t\t    //     if (object.type == 'trampoline') {\n\t\t    //         this.speedY < 0 ? this.speedY = 0 : true\n\t\t    //         sound_jump()\n\t\t    //         this.speedY = -0.5 * this.speedY - 25\n\t\t    //     }\n\t\t    //     if (object.type == 'coin') {\n\t\t    //         items.splice(items.indexOf(object), 1)\n\t\t    //         score++\n\t\t    //         sound_coin()\n\t\t    //     }\n\t\t    }\n\t\t});\n\n\n\n\t  // move the player when the level is at it's border, else move the level\n\t  if (Scene.scroll_x <= 0) {\n         if (calcX > (Stage.width / 2)) {\n             Scene.scroll_x = 1;\n         }\n     } else if (Scene.scroll_x >= Scene.width - Stage.width && Scene.width > Stage.width) {\n         Scene.scroll_x = Scene.width - Stage.width;\n         if (calcX < Scene.width - (Stage.width / 2)) {\n             Scene.scroll_x = Scene.width - Stage.width - 1;\n         }\n     } else if (Scene.width > Stage.width) {\n\t\t\tif(calcX > Scene.line_to_scroll){\n\t\t\t\tScene.scroll_x = calcX-Scene.line_to_scroll;\n\t\t\t}\n     }\n\n\t  \t// apply friction\n\t\tthis.speedX *= this.friction;\n\n\t\tthis.x = calcX;\n\t\tthis.y = calcY;\n\t}\n\n\twalk = (direction)=>{\n\t\tthis.speedX += this.velocity_x;\n\t\tthis.tag.classList.add('walk');\n\t\tthis.tag.classList.remove('walk-back');\n\t}\n\twalkReverse = (direction)=>{\n\t\tthis.speedX -= this.velocity_x;\n\t\tthis.tag.classList.remove('walk');\n\t\tthis.tag.classList.add('walk-back');\n\t}\n\tjump = ()=>{\n\t\tthis.speedY -= this.velocity_y;\n\t}\n\tlower = ()=>{\n\n\t}\n\n\n\n\n\t// todo: re-spawn player at the closest 'y' to the left\n\trespawnPlayer = ()=>{\n\t    // if (startpos = getLastLevelSpritePosition('y', this.x)) {\n\t    //     this.x = startpos.x * size.tile.target.w\n\t    //     if (this.x >= Stage.width/2) {\n\t    //         Scene.scroll_x = startpos.x * size.tile.target.w - Stage.width/2\n\t    //     } else {\n\t    //         Scene.scroll_x = 0\n\t    //     }\n\t    //     this.y = (startpos.y + line_offset_y) * size.tile.target.h\n\t    // } else {\n\t\t this.speedX = 0;\n\t\t this.speedY = 0;\n\t\t this.x = 40;\n\t\t this.y = 0;\n\t\t Scene.scroll_x = 0\n\t\t Scene.x = 0\n\t\t this.animation('right');\n\t}\n\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseFloat(x.toFixed(1));\n\t\tif(x != this.x){\n\t\t\tconsole.log('x', x, 'velocity_x',  this.velocity_x);\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseFloat(y.toFixed(1));\n\t\tif(y != this.y){\n\t\t\t// console.log(y);\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\tget speedX (){ return this._speedX; }\n\tset speedX (speedx){ this._speedX = parseFloat(speedx.toFixed(1)); }\n\n\tget width (){ return this.tag.offsetWidth; }\n\tget height (){ return this.tag.offsetHeight; }\n}\n\nexport {Puppet as default};\n","import Puppet from './Puppet';\n\nclass Game {\n\tconstructor(){\n\t\tthis.puppet = new Puppet(this);\n\n\t\tthis.ticks = 0;\n\n\t\tthis.fps = 30;\n\n\t\t// fps measurement\n\t\tthis.filterStrength = 20;\n\t\tthis.frameTime = 0;\n\t\tthis.lastLoop = new Date\n\t\tthis.thisLoop;\n\t}\n\n\tgameLoop = ()=>{\n\t\tthis.puppet.update();\n\n\t\tthis.ticks++;\n\t\tlet thisFrameTime = (this.thisLoop = new Date) - this.lastLoop;\n\t\tthis.frameTime += (this.thisFrameTime - this.frameTime) / this.filterStrength;\n\t\tthis.lastLoop = this.thisLoop;\n\n\t\t// console.log('fps: '+thisFrameTime);\n\t\t// drawLevel();\n\t\t// updateCharacters();\n\t\t// updateElements();\n\t\t// drawElements();\n\t\t// drawActors();\n\t\t// drawControls();\n\t}\n\n\tnewGame = ()=>{\n\t    window.clearInterval(this.gameInterval);\n\t    // hideMenus()\n\t    // hideControls()\n\t    // // draw initial level for menu background\n\t    // load_level()\n\t    // showStartMenu()\n\t}\n\n\tgameOver = ()=>{\n\t\tthis.newGame();\n\t\t//meu\n\t\tconsole.error('dead');\n\t\t// sound_dead()\n\t\tif (--this.puppet.lives > 0) {\n\t\t\tthis.puppet.respawnPlayer()\n\t\t\tthis.play();\n\t\t} else {\n\t\t\tdocument.querySelector('.GameOver').style.display=\"flex\";\n\t\t// todo: dying animation\n\t\t// actors = []\n\t\t\t//showGameOver()\n\t\t}\n\t}\n\n\tplay = ()=>{\n\t    // hideMenus();\n\t    // registerControls()\n\t    // initializeLevel()\n\t    // initializeTheme()\n\t    // sound_theme()\n\t    window.clearInterval(this.gameInterval);\n\t    this.gameInterval = setInterval(this.gameLoop, 1000 / this.fps);\n\t}\n\n\trestart = ()=>{\n\t    window.clearInterval(this.gameInterval);\n\t    // initGame()\n\t    // startGame()\n\t}\n}\n\nexport default new Game();\n\n\n\n\n\n\n/* 'use strict'\n\nconst speedX = 9;\nconst speedY = 0;\nconst gravity = 0.60;\nlet gravitySpeed = 0;\n\nconst stage = new Stage();\nconst scene = new Scene();\nconst puppet = new Puppet();\n\nlet isPaused = false;\nlet keys = [];\n\nsetInterval(function(){\n\tpuppet.gravity();\n\n\tif (keys.includes(\"ArrowLeft\")) {\n\t\tpuppet.goBack();\n\t}\n\tif (keys.includes(\"ArrowUp\")) {\n\t\tpuppet.jump();\n\t}\n\tif (keys.includes(\"ArrowRight\")) {\n\t\tpuppet.goAhead();\n\t}\n\tif (keys.includes(\"ArrowDown\")) {\n\t\tpuppet.dive();\n\t}\n}, 20);\n\ndocument.addEventListener(\"keydown\", function(e){\n\tif(keys.indexOf(e.key) == -1){\n\t\tkeys.push(e.key);\n\t}\n});\ndocument.addEventListener(\"keyup\", function(e){\n\tkeys.splice(keys.indexOf(e.key), 1);\n});*/\n","import Game from './src/Game';\n\nGame.play();\n"]}