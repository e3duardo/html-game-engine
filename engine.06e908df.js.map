{"version":3,"sources":["engine/Stage.js","engine/Inject.js","engine/Game.js","engine/Puppet.js","mario/src/Mario.js","engine/ControlBase.js","mario/src/Control.js","engine/Collidable.js","mario/src/Enemy/KoopaTroopaShell.js","mario/src/Enemy/KoopaTroopa.js","mario/src/Item/Question.js","mario/src/Item/Rotation.js","engine/CollidableFactoryBase.js","mario/src/CollidableFactory.js","engine/SceneBase.js","mario/src/Stage/YoshisIsland2.js","mario/src/SuperMarioWorld.js","index.js"],"names":["Stage","tag","document","querySelector","clientWidth","clientHeight","Inject","game","collidableFactory","control","puppet","scene","stage","Game","update","updatableMapVisible","forEach","object","ticks","thisLoop","Date","lastLoop","frameTime","thisFrameTime","filterStrength","window","clearInterval","gameInterval","lives","respawnPlayer","style","display","constructCollisionMap","setInterval","gameLoop","fps","size","tile","source","w","h","target","tiles","canvas","Number","prototype","inRange","a","b","n","Puppet","classe","classList","ax","x","ay","y","shift","velocity_x","velocity_x_jump","right","left","speedX","animation","up","down","speedY","jump","gravity","Math","abs","speed_limit_y","width","height","gameOver","getCollisionMapVisible","collides","collide","scroll_x","line_to_scroll","friction","releaseA","velocity_y","newGame","setTimeout","play","_speedX","offsetLeft","parseFloat","toFixed","offsetTop","top","speedx","offsetWidth","offsetHeight","Mario","ControlBase","key","keys","addEventListener","e","repeat","translateKeyboard","Control","Collidable","from","bottom","solid","contains","platform","elastic","deadly","border","horizontal","KoopaTroopaShell","parentNode","removeChild","die","sceneMap","speed_limit_x","updatable","KoopaTroopa","Question","disabled","backgroundPosition","coin","createElement","className","addTag","i","opacity","interval","console","log","shouldReleaseYoshi","releaseYoshi","releaseCoin","disable","Rotation","add","remove","static","rotate","stop","CollidableFactoryBase","CollidableFactory","SceneBase","querySelectorAll","collisionMap","push","updatableMap","visible","co","appendChild","_scroll_x","scroll_x_start","scroll","parseInt","YoshisIsland2","SuperMarioWord"],"mappings":"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","file":"engine.06e908df.js","sourceRoot":"..","sourcesContent":["class Stage {\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Stage');\n\t}\n\n\tget width (){ return this.tag.clientWidth; }\n\tget height (){ return this.tag.clientHeight; }\n}\nexport default Stage;\n","import Stage from './Stage';\n\nclass Inject {\n\tconstructor() {\n\t\tthis.game = null;\n\t\tthis.collidableFactory = null;\n\t\tthis.control = null;\n\t\tthis.puppet = null;\n\t\tthis.scene = null;\n\t\tthis.stage = new Stage();\n\t}\n}\n\nexport default new Inject();\n","import Inject from './Inject';\n\nclass Game {\n\tconstructor(){\n\t\tthis.ticks = 0;\n\t\tthis.fps = 30;\n\n\t\t// fps measurement\n\t\tthis.filterStrength = 20;\n\t\tthis.frameTime = 0;\n\t\tthis.lastLoop = new Date\n\t\tthis.thisLoop;\n\t}\n\n\tgameLoop = ()=>{\n\t\tInject.puppet.update();\n\n\t\tInject.scene.updatableMapVisible.forEach((object)=>{\n\t\t\tobject.update();\n\t\t});\n\n\t\tthis.ticks++;\n\t\tlet thisFrameTime = (this.thisLoop = new Date) - this.lastLoop;\n\t\tthis.frameTime += (this.thisFrameTime - this.frameTime) / this.filterStrength;\n\t\tthis.lastLoop = this.thisLoop;\n\n\t\t// console.log('fps: '+thisFrameTime);\n\t\t// drawLevel();\n\t\t// updateCharacters();\n\t\t// updateElements();\n\t\t// drawElements();\n\t\t// drawActors();\n\t\t// drawControls();\n\t}\n\n\tnewGame = ()=>{\n\t    window.clearInterval(this.gameInterval);\n\t    // hideMenus()\n\t    // hideControls()\n\t    // // draw initial level for menu background\n\t    // load_level()\n\t    // showStartMenu()\n\t}\n\n\tgameOver = ()=>{\n\t\t//meu\n\t\t// sound_dead()\n\t\tif (--Inject.puppet.lives > 0) {\n\t\t\tInject.puppet.respawnPlayer()\n\t\t} else {\n\t\t\tdocument.querySelector('.GameOver').style.display=\"flex\";\n\t\t// todo: dying animation\n\t\t// actors = []\n\t\t\t//showGameOver()\n\t\t}\n\t}\n\n\tplay = ()=>{\n\t    // hideMenus();\n\t    // registerControls()\n\t    // initializeLevel()\n\t    // initializeTheme()\n\t    // sound_theme()\n\t\t Inject.scene.constructCollisionMap();\n\t    window.clearInterval(this.gameInterval);\n\t    this.gameInterval = setInterval(this.gameLoop, 1000 / this.fps);\n\t}\n\n\trestart = ()=>{\n\t    window.clearInterval(this.gameInterval);\n\t    // initGame()\n\t    // startGame()\n\t}\n}\n\nexport default Game;\n","import Inject from './Inject';\n\nvar size = {\n    tile:{ // size of tiles\n        source:{w:16, h:16},\n        target:{w:32, h:32}\n    },\n    tiles:{ // number of tiles\n        target:{w:1, h:1} // this is set dynamically depending on the canvas size\n    },\n    canvas:{w:1, h:1} // the canvas size is read from the actual html\n};\nNumber.prototype.inRange = function (a, b) {\n    var n = +this;\n    return ( n >= a && n <= b );\n};\n\nclass Puppet {\n\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Puppet');\n\t\tthis.ax=0;\n\t\tthis.ay=0;\n\t\tthis.velocity_x=1;\n\t\tthis.velocity_x_jump=1.2;\n\t\tthis.velocity_y=22;\n\t\tthis.friction=0.8;\n\t\tthis.speed_limit_y=10;\n\n\t\tthis._speedX=0;\n\t\tthis.speedY=0;\n\n\t\tthis.lives=3;\n\n\t\tthis.animation('right');\n\t}\n\n\tanimation = (classe)=>{\n\t\tthis.tag.classList = \"Puppet \"+classe;\n\t}\n\tupdate = ()=>{\n\t\tthis.ax = this.x;\n\t\tthis.ay = this.y;\n\n\t\tif(Inject.control.shift){\n\t\t\tthis.velocity_x=2;\n\t\t\tthis.velocity_x_jump=2.2;\n\t\t}else{\n\t\t\tthis.velocity_x=1;\n\t\t\tthis.velocity_x_jump=1.2;\n\t\t}\n\n\t\t// this.tag.style.backgroundPosition = \"-209px 0\";\n\n\t\tif(!Inject.control.right && !Inject.control.left){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('left');\n\t\t\t}else{\n\t\t\t\tthis.animation('right');\n\t\t\t}\n\t\t}\n\t\tif (Inject.control.up) {\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('lookup-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('lookup-right');\n\t\t\t}\n\t\t}\n\t\tif(Inject.control.down) {\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('lower-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('lower-right');\n\t\t\t}\n\t\t}\n\t\tif (this.speedY == 0) {\n\t\t\tif (Inject.control.left) {\n\t\t\t\t// if(this.speedX > 0){\n\t\t\t\t// \tconsole.warn('run with SMOKE left');\n\t\t\t\t// }else{\n\t\t\t\t// }\n\t\t\t\tthis.animation('walk-left');\n\t\t\t\tthis.speedX -= this.velocity_x;\n\t\t\t} else if (Inject.control.right) {\n\t\t\t\t// if(this.speedX < 0){\n\t\t\t\t// \tconsole.warn('run with SMOKE right');\n\t\t\t\t// }else{\n\t\t\t\t// }\n\t\t\t\tthis.animation('walk-right');\n\t\t\t\tthis.speedX += this.velocity_x;\n\t\t\t}\n\t\t}else {\n\t\t\tif (Inject.control.left) {\n\t\t\t\tthis.speedX -= this.velocity_x_jump;\n\t\t\t} else if (Inject.control.right) {\n\t\t\t\tthis.speedX += this.velocity_x_jump;\n\t\t\t}\n\t\t}\n\t\tif (Inject.control.a && this.speedY == 0) {\n\t\t\tthis.jump();\n\t\t}\n\n\t\tif(this.speedY < 0){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('jumping-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('jumping-right');\n\t\t\t}\n\t\t}else if(this.speedY > 0){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('falling-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('falling-right');\n\t\t\t}\n\t\t}\n\n\n\t\t// apply gravity.\n\t\tthis.speedY += Inject.scene.gravity;\n\t\tif (Math.abs(this.speedY) < 0.1) this.speedY = 0;\n\n\t\t// apply speed limit when falling down\n\t\tif (this.speedY > this.speed_limit_y) {\n\t\t\tthis.speedY = this.speed_limit_y;\n\t\t}\n\n\t\tthis.ax += this.speedX;\n\t\tthis.ay += this.speedY;\n\n\t\t// block on level edge\n\t\tif (this.ax < 0) {\n\t\t\tthis.ax = 0;\n\t\t} else if (this.ax + this.width > Inject.scene.width) {\n\t\t\tthis.ax = Inject.scene.width - this.width;\n\t\t}\n\t\t// die on level bottom\n\t\tif (this.ay > Inject.scene.height) {\n\t\t\tInject.game.gameOver();\n\t\t}\n\n\t\t// add visible items + actors to collision check\n\t\t// todo: only add visible items\n\t\tInject.scene.getCollisionMapVisible().forEach((object)=>{\n\t\t\tconst collides = object.collides(this);\n\n\t\t\tobject.collide(this, collides);\n\n\n\t\t\t// if (object.solid) {\n            /* if (collides.top && object.border.top=='solid') {\n                 // if (object.type == 'block_coin') {\n                 //     replaceLevelSpriteXY(object.x, object.y, \"ß\");\n                 //     items.push({ sx:8, sy:9, x:object.x, y:(object.y - size.tile.target.h), type:'coin' });\n                 // } else {\n                     this.ay = object.y + this.height;// + size.tile.target.h;\n                     this.speedY = 1;\n                 // }\n             }\n\t\t\t\t if (collides.bottom && object.border.bottom=='solid') {\n                 // jump on enemy\n                 // if (object.type == 'enemy_mushroom') {\n                 //     object.deadly = false\n                 //     object.speed = 0\n                 //     object.sx = 2\n                 //     score++;\n                 //     sound_jump_on_enemy()\n                 // }\n                 this.ay = object.y - this.height;\n                 this.speedY = 0;\n             }\n\t\t\t\t if (collides.right && object.border.right=='solid') {\n                 this.ax = object.x - this.width;\n                 this.speedX = 0;\n             }\n\t\t\t\t if (collides.left && object.border.left=='solid') {\n                 this.ax = object.x + this.width;//+ size.tile.target.w;\n                 this.speedX = 0;\n             }*/\n         // }else if (object.platform) {\n\t\t\t// \tif (collides.bottom) {\n\t\t\t// \t\tif(this.speedY > 0){\n\t\t\t// \t\t\tthis.ay = object.y - this.height;\n\t\t\t// \t\t\tthis.speedY = 0;\n\t\t\t// \t\t}\n\t\t\t// \t}\n         // }\n\n\t\t\t// const collides = this.checkCollision(object);\n\n\t\t    // apply collision to player movement\n\t\t    // special actions on collisions\n\t\t    // if (object.solid) {\n\t\t    //     if (collides.top) {\n\t\t    //         // if (object.type == 'block_coin') {\n\t\t    //         //     replaceLevelSpriteXY(object.x, object.y, \"ß\");\n\t\t    //         //     items.push({ sx:8, sy:9, x:object.x, y:(object.y - size.tile.target.h), type:'coin' });\n\t\t    //         // } else {\n\t\t\t\t// \t\t// if\n\t\t    //             this.y = object.y-object.height;\n\t\t    //             this.speedY = 0;\n\t\t    //         // }\n\t\t    //     } else if (collides.bottom) {\n\t\t    //         // jump on enemy\n\t\t    //         // if (object.type == 'enemy_mushroom') {\n\t\t    //         //     object.deadly = false\n\t\t    //         //     object.speed = 0\n\t\t    //         //     object.sx = 2\n\t\t    //         //     score++;\n\t\t    //         //     sound_jump_on_enemy()\n\t\t    //         // }\n\t\t\t\t// \t\tthis.y = object.y+object.height;\n\t\t\t\t// \t\tthis.speedY = 0;\n\t\t    //     } else if (collides.right) {\n\t\t    //         this.x = object.x - this.width;\n\t\t    //         this.speedX = 0;\n\t\t    //     } else if (collides.left) {\n\t\t    //         this.x = object.x + size.tile.target.w;\n\t\t    //         this.speedX = 0;\n\t\t    //     }\n\t\t    // }\n\n\t\t   // collide from any side\n\t\t\t//if (collides.top || collides.bottom || collides.right || collides.left) {\n\n\t\t\t//\tobject.collide(this, collides);\n\n\t\t\t//\tif (object.deadly == true) {\n/*\n\n\t\t\t\t\t//items.push({ sx:, sy:9, x:this.x, y:this.y, deadly:false, type:'looser' });\n\t\t\t\t\tGame.newGame();\n\n\t\t\t\t\tif (this.speedX < 0) {\n\t\t\t\t\t\tthis.animation('dying-left');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.animation('dying-right');\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tGame.gameOver();\n\t\t\t\t\t\tGame.play();\n\t\t\t\t\t}, 1000);*/\n\t\t\t//\t}\n\t\t    //     if (object.type == 'exit') {\n\t\t    //         levelWin()\n\t\t    //     }\n\t\t    //     if (object.type == 'trampoline') {\n\t\t    //         this.speedY < 0 ? this.speedY = 0 : true\n\t\t    //         sound_jump()\n\t\t    //         this.speedY = -0.5 * this.speedY - 25\n\t\t    //     }\n\t\t    //     if (object.type == 'coin') {\n\t\t    //         items.splice(items.indexOf(object), 1)\n\t\t    //         score++\n\t\t    //         sound_coin()\n\t\t    //     }\n\t\t    //}\n\t\t});\n\n\n\n\t  // move the player when the level is at it's border, else move the level\n\t  if (Inject.scene.scroll_x <= 0) {\n         if (this.ax > (Inject.stage.width / 2)) {\n             Inject.scene.scroll_x = 1;\n         }\n     } else if (Inject.scene.scroll_x >= Inject.scene.width - Inject.stage.width && Inject.scene.width > Inject.stage.width) {\n         Inject.scene.scroll_x = Inject.scene.width - Inject.stage.width;\n         if (this.ax < Inject.scene.width - (Inject.stage.width / 2)) {\n             Inject.scene.scroll_x = Inject.scene.width - Inject.stage.width - 1;\n         }\n     } else if (Inject.scene.width > Inject.stage.width) {\n\t\t\tif(this.ax > Inject.scene.line_to_scroll){\n\t\t\t\tInject.scene.scroll_x = this.ax-Inject.scene.line_to_scroll;\n\t\t\t}\n     }\n\n\t  \t// apply friction\n\t\tthis.speedX *= this.friction;\n\n\t\tthis.x = this.ax;\n\t\tthis.y = this.ay;\n\t}\n\tjump = ()=>{\n\t\tInject.control.releaseA();\n\t\tthis.speedY -= this.velocity_y;\n\t}\n\tdie = ()=>{\n\t\tInject.game.newGame();\n\n\t\tif (this.speedX < 0) {\n\t\t\tthis.animation('dying-left');\n\t\t}else{\n\t\t\tthis.animation('dying-right');\n\t\t}\n\n\t\tsetTimeout(()=>{\n\t\t\tInject.game.gameOver();\n\t\t\tInject.game.play();\n\t\t}, 1000);\n\t}\n\tlower = ()=>{\n\n\t}\n\n\n\n\n\t// todo: re-spawn player at the closest 'y' to the left\n\trespawnPlayer = ()=>{\n\t    // if (startpos = getLastLevelSpritePosition('y', this.x)) {\n\t    //     this.x = startpos.x * size.tile.target.w\n\t    //     if (this.x >= Inject.stage.width/2) {\n\t    //         Scene.scroll_x = startpos.x * size.tile.target.w - Inject.stage.width/2\n\t    //     } else {\n\t    //         Scene.scroll_x = 0\n\t    //     }\n\t    //     this.y = (startpos.y + line_offset_y) * size.tile.target.h\n\t    // } else {\n\t\t this.speedX = 0;\n\t\t this.speedY = 0;\n\t\t this.x = 40;\n\t\t this.y = 0;\n\t\t Inject.scene.scroll_x = 0\n\t\t Inject.scene.x = 0\n\t\t this.animation('right');\n\t}\n\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseFloat(x.toFixed(1));\n\t\tif(x != this.x){\n\t\t\t// console.log('x', x, 'velocity_x',  this.velocity_x);\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseFloat(y.toFixed(1));\n\t\tif(y != this.y){\n\t\t\t// console.log(y);\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\tget speedX (){ return this._speedX; }\n\tset speedX (speedx){ this._speedX = parseFloat(speedx.toFixed(1)); }\n\n\tget width (){ return this.tag.offsetWidth; }\n\tget height (){ return this.tag.offsetHeight; }\n}\n\nexport {Puppet as default};\n","import Puppet from '~/engine/Puppet';\n\nclass Mario extends Puppet{\n\tconstructor(){\n\t\tsuper();\n\t}\n}\n\nexport default Mario;\n","class ControlBase {\n\tconstructor(){\n\t\tthis.keys = {\n\t\t};\n\t\tdocument.addEventListener(\"keydown\", (e)=>{\n\t\t\tif(!e.repeat){\n\t\t\t\tthis.keys[this.translateKeyboard(e.key)] = true;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener(\"keyup\", (e)=>{\n\t\t\tif(!e.repeat){\n\t\t\t\tthis.keys[this.translateKeyboard(e.key)] = false;\n\t\t\t}\n\t\t});\n\t}\n\n\ttranslateKeyboard  = (key)=>{\n\t\treturn '';\n\t}\n}\n\nexport default ControlBase;\n","import ControlBase from '~/engine/ControlBase';\n\nclass Control extends ControlBase{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.keys = {\n\t\t\tup: false,\n\t\t\tright: false,\n\t\t\tdown: false,\n\t\t\tleft: false,\n\t\t\ta: false,\n\t\t\tshift: false\n\t\t};\n\t}\n\n\tget up(){ return this.keys.up; }\n\tget right(){ return this.keys.right; }\n\tget down(){ return this.keys.down; }\n\tget left(){ return this.keys.left; }\n\tget a(){ return this.keys.a; }\n\tget shift(){ return this.keys.shift; }\n\treleaseA=()=>{ this.keys.a = false;}\n\n\ttranslateKeyboard  = (key)=>{\n\t\tif(key == \"ArrowUp\") return 'up';\n\t\tif(key == \"ArrowRight\") return 'right';\n\t\tif(key == \"ArrowDown\") return 'down';\n\t\tif(key == \"ArrowLeft\") return 'left';\n\t\tif(key == \"a\" || key == \"A\" ) return 'a';\n\t\tif(key == \"Shift\" ) return 'shift';\n\t\treturn '';\n\t}\n}\n\nexport default Control;\n","class Collidable {\n\tconstructor(tag) {\n\t\tthis.tag = tag;\n\t\tthis.solid = this.tag.classList.contains('solid');\n\t\tthis.platform = this.tag.classList.contains('platform');\n\t\tthis.elastic = this.tag.classList.contains('elastic');\n\t\tthis.deadly = this.tag.classList.contains('deadly');\n\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t\tif(this.platform){\n\t\t\tthis.border.top='platform';\n\t\t\tthis.border.bottom=false;\n\t\t\tthis.border.horizontal=false;\n\t\t}\n\t}\n\n\tcollide(from, collides){\n\t// collide = (from, collides)=>{\n\t\tif (collides.top && this.border.bottom=='solid') {\n\t\t\t  from.ay = this.y + from.height;// + size.tile.target.h;\n\t\t\t  from.speedY = 1;\n\t\t}\n\t\tif (collides.bottom){\n\t\t\tif(this.border.top=='solid') {\n\t\t\t\tfrom.ay = this.y - from.height;\n\t\t\t\tfrom.speedY = 0;\n\t\t\t}else if(this.border.top=='platform') {\n\t\t\t\tif(from.speedY > 0){\n\t\t\t\t\tfrom.ay = this.y - from.height;\n\t\t\t\t\tfrom.speedY = 0;\n\t\t\t \t}\n\t\t \t}\n\t\t}\n\t\tif (collides.right && this.border.horizontal=='solid' && from.speedX > 0) {\n\t\t\tif(from.border && from.border.horizontal=='elastic') {\n\t\t\t\tfrom.speedX *= -1;\n\t\t\t}else{\n\t\t\t\tfrom.ax = this.x - from.width;\n\t\t\t\tfrom.speedX = 0;\n\t\t\t}\n\t\t}\n\t\tif (collides.left && this.border.horizontal=='solid' && from.speedX < 0) {\n\t\t\tif(from.border && from.border.horizontal=='elastic') {\n\t\t\t\tfrom.speedX *= -1;\n\t\t\t}else{\n\t\t\t\tfrom.ax = this.x + this.width;\n\t\t\t\tfrom.speedX = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tcollides = (from)=>{\n\t\tlet collides = {top:false, bottom:false, left:false, right:false};\n\t\t// we are below or above an object (use the middle of the actor, with tolerance)\n\t\tif ((from.ax + from.width / 2).inRange(this.x - 0.25, this.x + this.width + 1.25)) {\n\t\t\t// check bounce bottom:\n\t\t\tif ((from.ay + from.height).inRange(this.y, this.y + this.height - 1) && from.ay < this.y) {\n\t\t\t\tcollides.bottom = true;\n\t\t\t// check bounce top:\n\t\t\t} else if (from.ay.inRange(this.y, this.y + this.height)) {\n\t\t\t\tcollides.top = true;\n\t\t\t}\n\t\t}\n\t\t// we are right or left of an object\n\t\tif ((from.ay + from.height / 2).inRange(this.y - 0.25, this.y + this.height + 1.25)) {\n\t\t\t// check bounce right\n\t\t\tif ((from.ax + from.width).inRange(this.x, this.x + this.width)) {\n\t\t\t\tcollides.right = true;\n\t\t\t}\n\t\t\t// check bounce left\n\t\t\tif (from.ax.inRange(this.x, this.x + this.width)) {// + this.width)) {\n\t\t\t\tcollides.left = true;\n\t\t\t}\n\t\t}\n\t\treturn collides;\n\t}\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){ this.tag.style.left = x +'px'; }\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){ this.tag.style.top = y +'px'; }\n\n\tget width (){ return this.tag.offsetWidth; }\n\tget height (){ return this.tag.offsetHeight; }\n}\n\nexport {Collidable as default};\n","import Inject from '~/engine/Inject';\nimport Collidable from '~/engine/Collidable';\n\nclass KoopaTroopaShell extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.ax=0;\n\t\tthis.ay=0;\n\t\tthis.speedX=0;\n\t\tthis.speedY=0;\n\t\tthis.velocity_x=1;\n\t\tthis.speed_limit_x=10;\n\t\tthis.friction=0.8;\n\n\t\tthis.updatable = true;\n\t\tthis.border.horizontal='elastic';\n\t}\n\n\tcollide = (from, collides)=>{\n\t\t// TODO: implementar algoritmo de elasticidade\n\t\tif(collides.bottom){\n\t\t\tfrom.jump();\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.tag.parentNode.removeChild(this.tag)\n\t\t\t},100)\n\t\t}\n\n\t\tif(collides.right || collides.left){\n\t\t\tif(from.speedX > 0.2)\n\t\t\t\tthis.speedX += this.velocity_x;\n\t\t\telse if(from.speedX < -0.2)\n\t\t\t\tthis.speedX -= this.velocity_x;\n\t\t\telse\n\t\t\t\tfrom.die();\n\t\t\t\t//console.error('dead');\n\t\t}\n\t}\n\n\tupdate = ()=>{\n\t\tthis.ax = this.x;\n\t\tthis.ay = this.y;\n\n\t\t// apply gravity.\n\t\tthis.speedY += Inject.scene.gravity;\n\t\tif (Math.abs(this.speedY) < 0.1) this.speedY = 0;\n\n\t\t// apply speed limit when falling down\n\t\tif (this.speedY > this.speed_limit_y) {\n\t\t\tthis.speedY = this.speed_limit_y;\n\t\t}\n\n\t\tthis.ax += this.speedX;\n\t\tthis.ay += this.speedY;\n\n\t\tInject.scene.sceneMap.forEach((object)=>{\n\t\t\tconst collides = object.collides(this);\n\t\t\tobject.collide(this, collides);\n\t\t});\n\t  \t// apply friction\n\t\t// this.speedX *= this.friction;\n\n\t\tthis.x = this.ax;\n\t\tthis.y = this.ay;\n\t}\n}\n\nexport {KoopaTroopaShell as default};\n","import Collidable from '~/engine/Collidable';\n\n//https://www.mariowiki.com/Koopa_Troopa\nclass KoopaTroopa extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tright: 'deadly',\n\t\t\tbottom: 'deadly',\n\t\t\tleft: 'deadly'\n\t\t}\n\t}\n\n\tcollide = (from, collides)=>{\n\t\t// TODO: implementar algoritmo de elasticidade\n\t\tif(collides.bottom){\n\t\t\tfrom.jump();\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.tag.parentNode.removeChild(this.tag)\n\t\t\t},100)\n\t\t}else if(collides.right || collides.left){\n\t\t\tfrom.die();\n\t\t}\n\t}\n}\n\nexport {KoopaTroopa as default};\n","import Collidable from '~/engine/Collidable';\nimport Inject from '~/engine/Inject';\n\nclass Question extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.disabled = false;\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t\tthis.shouldReleaseYoshi = tag.classList.contains('releaseYoshi');\n\t}\n\n\tdisable = ()=>{\n\t\tthis.disabled = true;\n\t\tthis.tag.style.backgroundPosition = '-257px -97px';\n\t\tthis.tag.style.animation = 'none';\n\t}\n\n\treleaseCoin = ()=>{\n\t\tconst coin = document.createElement('div');\n\t\tcoin.className = 'Object Coin';\n\t\tcoin.style.left= this.x+'px';\n\t\tcoin.style.top= (this.y-16)+'px';\n\t\tInject.scene.addTag(coin);\n\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\tcoin.style.top += (coin.style.offsetTop+1)+'px';\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tcoin.style.opacity=0;\n\t\t\tcoin.parentNode.removeChild(coin);\n\t\t}, 260);\n\t}\n\treleaseYoshi = ()=>{\n\t\tconst coin = document.createElement('div');\n\t\tcoin.className = 'Plant Egg';\n\t\tcoin.style.left= this.x+'px';\n\t\tcoin.style.top= (this.y-16)+'px';\n\t\tInject.scene.addTag(coin);\n\n\t\tlet i = 0;\n\t\tlet interval;\n\t\tinterval = setInterval(()=>{\n\t\t\tconsole.log(coin.offsetTop);\n\t\t\ti++;\n\t\t\tif(i<2){\n\t\t\t\tcoin.style.top = (coin.offsetTop-1)+'px';\n\t\t\t}\n\t\t\tif(i>8){\n\t\t\t\tcoin.style.top = (coin.offsetTop+1)+'px';\n\t\t\t}\n\t\t\tif(i>20){\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 15);\n\t}\n\n\tcollide = (from, collides)=>{\n\t\tsuper.collide(from, collides);\n\n\t\tif (!this.disabled && collides.top && this.border.bottom=='solid') {\n\t\t\tlet i = 0;\n\t\t\tlet interval;\n\t\t\tinterval = setInterval(()=>{\n\t\t\t\ti++;\n\t\t\t\tif(i<10){\n\t\t\t\t\tthis.y -= 1;\n\t\t\t\t}\n\t\t\t\tif(i==10){\n\t\t\t\t\tif(this.shouldReleaseYoshi){\n\t\t\t\t\t\tthis.releaseYoshi();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.releaseCoin();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(i>10){\n\t\t\t\t\tthis.y += 1;\n\t\t\t\t}\n\t\t\t\tif(i>=20){\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tthis.disable();\n\t\t\t\t}\n\t\t\t}, 5);\n\t\t}\n\t}\n}\n\nexport {Question as default};\n","import Collidable from '~/engine/Collidable';\nimport Inject from '~/engine/Inject';\n\nclass Rotation extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.disabled = false;\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t\tthis.static = tag.classList.contains('static');\n\t}\n\n\trotate = ()=>{\n\t\tthis.tag.classList.add('Rotation');\n\t\tthis.border = {\n\t\t\ttop: false,\n\t\t\tbottom: false,\n\t\t\thorizontal: false\n\t\t}\n\t}\n\tstop = ()=>{\n\t\tthis.tag.classList.remove('Rotation');\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t}\n\n\tdisable = ()=>{\n\t\tthis.disabled = true;\n\t\tthis.tag.style.backgroundPosition = '-257px -97px';\n\t\tthis.tag.style.animation = 'none';\n\t}\n\n\tcollide = (from, collides)=>{\n\t\tsuper.collide(from, collides);\n\n\t\tif (!this.disabled && collides.top && this.border.bottom=='solid') {\n\t\t\tif(this.static){\n\t\t\t\tthis.disable();\n\t\t\t}else{\n\t\t\t\tthis.rotate();\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tthis.stop();\n\t\t\t\t},5000);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport {Rotation as default};\n","import Collidable from './Collidable';\n\nclass CollidableFactoryBase {\n\tconstructor(){\n\t}\n\n\tfrom(tag){\n\t\treturn new Collidable(tag);\n\t}\n}\n\nexport {CollidableFactoryBase as default};\n","import KoopaTroopaShell from './Enemy/KoopaTroopaShell';\nimport KoopaTroopa from './Enemy/KoopaTroopa';\n\nimport Question from './Item/Question';\nimport Rotation from './Item/Rotation';\n\nimport CollidableFactoryBase from '~/engine/CollidableFactoryBase';\n\nclass CollidableFactory extends CollidableFactoryBase{\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\tfrom(tag){\n\t\tif(tag.classList.contains('TurtleShell')){\n\t\t\treturn new KoopaTroopaShell(tag);\n\t\t}\n\t\tif(tag.classList.contains('Turtle')){\n\t\t\treturn new KoopaTroopa(tag);\n\t\t}\n\t\tif(tag.classList.contains('Question')){\n\t\t\treturn new Question(tag);\n\t\t}\n\t\tif(tag.classList.contains('Plate')){\n\t\t\treturn new Rotation(tag);\n\t\t}\n\t\treturn super.from(tag);\n\t}\n}\n\nexport {CollidableFactory as default};\n","import Inject from './Inject';\n\nclass SceneBase {\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Scene');\n\n\t\tthis.gravity=3;\n\n\t\tthis.line_to_scroll = 128;\n\t\tthis._scroll_x = 0;\n\t\tthis.scroll_x_start = 0;\n\n\t\tthis.collisionMap = [];\n\t\tthis.updatableMap = [];\n\t\tthis.sceneMap = [];\n\t}\n\n\tconstructCollisionMap=()=>{\n\t\tdocument.querySelectorAll('.Collidable').forEach((object)=>{\n\t\t\tobject = Inject.collidableFactory.from(object);\n\t\t\tthis.collisionMap.push(object);\n\t\t\tif(object.updatable){\n\t\t\t\tthis.updatableMap.push(object);\n\t\t\t}\n\t\t\tif(object.solid || object.platform){\n\t\t\t\tthis.sceneMap.push(object);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCollisionMapVisible=()=>{\n\t\tvar visible = []\n\n\t\tthis.collisionMap.forEach(co=>{\n\t\t\tif(co.x > (Math.abs(this.x) - 30) && co.x < (Math.abs(this.x)+Inject.stage.width+30))\n\t\t\t\tvisible.push(co);\n\t\t});\n\t\t// console.log(visible);\n\t\t// console.log(Math.abs(this.x), Math.abs(this.x)+Inject.stage.width);\n\t\treturn visible;\n\t}\n\n\taddTag=(tag)=>{\n\t\tthis.tag.appendChild(tag);\n\t}\n\n\tget updatableMapVisible(){\n\n\t\t// console.log(this.updatableMap);\n\n\t\t// console.log(this.updatableMap);\n\n\t\treturn [];\n\t}\n\n\tget scroll_x(){\n\t\treturn this._scroll_x;\n\t}\n\tset scroll_x(scroll){\n\t\tthis.x = -scroll;\n\t\tthis._scroll_x = scroll;\n\t}\n\n\tget width (){ return this.tag.clientWidth; }\n\tget height (){ return this.tag.clientHeight; }\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseInt(x);\n\t\tif(x != this.x){\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseInt(y);\n\t\tif(y != this.y){\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\n}\n\nexport default SceneBase;\n","import SceneBase from '~/engine/SceneBase';\n\nclass YoshisIsland2 extends SceneBase {\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default YoshisIsland2;\n","import Inject from '~/engine/Inject';\n\nimport Game from '~/engine/Game';\n\nimport Mario from './Mario';\nimport Control from './Control';\nimport CollidableFactory from './CollidableFactory';\nimport YoshisIsland2 from './Stage/YoshisIsland2';\n\nclass SuperMarioWord extends Game {\n\tconstructor(){\n\t\tsuper();\n\n\t\tInject.puppet = new Mario();\n\t\tInject.scene = new YoshisIsland2();\n\t\tInject.collidableFactory = new CollidableFactory();\n\t\tInject.control = new Control();\n\n\t\tInject.game = this;\n\t}\n}\n\nexport default new SuperMarioWord();\n","import SuperMarioWord from './mario/src/SuperMarioWorld';\n\n//\n\nSuperMarioWord.play();\n\ndocument.querySelector('.Stage').addEventListener('click', ()=>{\n});\n"]}