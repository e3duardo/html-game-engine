{"version":3,"sources":["engine/Stage.js","node_modules/autobind-decorator/lib/esm/index.js","engine/Audio.js","engine/Inject.js","engine/Game.js","engine/Puppet.js","marioworld/src/Mario.js","engine/ControlBase.js","marioworld/src/Control.js","engine/Collidable.js","marioworld/src/Enemy/KoopaTroopaShell.js","marioworld/src/Enemy/KoopaTroopa.js","marioworld/src/Item/Question.js","marioworld/src/Item/Rotation.js","marioworld/src/Item/Switch.js","engine/CollidableFactoryBase.js","marioworld/src/CollidableFactory.js","engine/SceneBase.js","marioworld/src/Stage/YoshisIsland2.js","marioworld/src/SuperMarioWorld.js","marioworld/index.js"],"names":["Stage","tag","document","querySelector","clientWidth","clientHeight","_typeof","obj","Symbol","iterator","constructor","prototype","boundMethod","target","key","descriptor","fn","value","TypeError","concat","definingProperty","configurable","get","hasOwnProperty","boundFn","bind","Object","defineProperty","set","boundClass","keys","Reflect","ownKeys","getOwnPropertyNames","getOwnPropertySymbols","forEach","getOwnPropertyDescriptor","autobind","arguments","length","apply","Audio","mute","sound","body","removeChild","background","createElement","classList","add","style","display","src","loop","appendChild","addEventListener","play","pause","console","log","audio","onended","remove","Inject","game","collidableFactory","control","puppet","scene","stage","Game","gameLoop","update","updatableMap","object","ticks","thisLoop","Date","lastLoop","frameTime","thisFrameTime","filterStrength","newGame","window","clearInterval","gameInterval","restart","fps","lives","respawnPlayer","constructCollisionMap","setInterval","size","tile","source","w","h","tiles","canvas","Number","inRange","a","b","n","Puppet","ax","ay","velocity_x","velocity_x_jump","velocity_y","friction","speed_limit_y","_speedX","speedY","animation","classe","x","y","shift","right","left","speedX","up","down","jump","gravity","Math","abs","width","height","gameOver","getCollisionMapVisible","collisions","collides","scenario","top","border","bottom","horizontal","enemy","item","collide","scroll_x","line_to_scroll","releaseA","setTimeout","offsetLeft","parseFloat","toFixed","offsetTop","speedx","offsetWidth","offsetHeight","Mario","jumpSound","require","ControlBase","translateKeyboard","e","repeat","Control","pressA","Collidable","solid","contains","platform","speed_limit_x","type","updatable","affectedByGravity","collideWithTheScene","from","sceneMap","KoopaTroopaShell","parentNode","die","KoopaTroopa","Question","disabled","shouldReleaseYoshi","backgroundPosition","coin","className","addTag","i","opacity","interval","releaseYoshi","releaseCoin","disable","Rotation","static","rotate","stop","Switch","CollidableFactoryBase","CollidableFactory","SceneBase","collisionMap","querySelectorAll","push","_scroll_x","scroll_x_start","scroll","parseInt","YoshisIsland2","stageSound","SuperMarioWord","playBackground","stopBackground"],"mappings":"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","file":"marioworld.47b06737.js","sourceRoot":"..","sourcesContent":["class Stage {\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Stage');\n\t}\n\n\tget width (){ return this.tag.clientWidth; }\n\tget height (){ return this.tag.clientHeight; }\n}\nexport default Stage;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\nexport function boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new TypeError(\"@boundMethod decorator can only be applied to methods not: \".concat(_typeof(fn)));\n  } // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n\n\n  var definingProperty = false;\n  return {\n    configurable: true,\n    get: function get() {\n      // eslint-disable-next-line no-prototype-builtins\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key) || typeof fn !== 'function') {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        configurable: true,\n        get: function get() {\n          return boundFn;\n        },\n        set: function set(value) {\n          fn = value;\n          delete this[key];\n        }\n      });\n      definingProperty = false;\n      return boundFn;\n    },\n    set: function set(value) {\n      fn = value;\n    }\n  };\n}\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\n\nexport function boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys; // Use Reflect if exists\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype); // Use symbols if support is provided\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key); // Only methods need binding\n\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\nexport default function autobind() {\n  if (arguments.length === 1) {\n    return boundClass.apply(void 0, arguments);\n  }\n\n  return boundMethod.apply(void 0, arguments);\n}","import {boundMethod} from 'autobind-decorator'\n\nclass Audio {\n\tconstructor(){\n\t\tthis.mute = true;\n\t}\n\n\t@boundMethod\n\tplayBackground(sound){\n\t\tif(this.mute != true){\n\t\t\tconst background1 = document.querySelector('.backgroundSound');\n\t\t\tif(background1){\n\t\t\t\tdocument.body.removeChild(background);\n\t\t\t}\n\n\t\t\tconst background = document.createElement('audio');\n\t\t\tbackground.classList.add('backgroundSound')\n\t\t\tbackground.style.display = \"none\";\n\t\t\tbackground.src = sound;\n\t\t\tbackground.loop = true;\n\t\t\tdocument.body.appendChild(background);\n\n\t\t\tbackground.addEventListener('canplaythrough', ()=>{\n\t\t\t\tbackground.play();\n\t\t\t});\n\t\t}\n\t}\n\n\t@boundMethod\n\tstopBackground(){\n\t\tconst background = document.querySelector('.backgroundSound');\n\t\tif(background){\n\t\t\tbackground.pause();\n\t\t\tdocument.body.removeChild(background);\n\t\t}\n\t}\n\n\t@boundMethod\n\tplay(sound){\n\t\tif(this.mute != true){\n\t\t\tconsole.log('play: ',sound);\n\t\t\tconst audio = document.createElement('audio');\n\t\t\taudio.style.display = \"none\";\n\t\t\taudio.src = sound;\n\t\t\taudio.play();\n\t\t\t// audio.autoplay = true;\n\t\t\taudio.onended = function(){\n\t\t\t\taudio.remove() //Remove when played.\n\t\t\t};\n\t\t\tdocument.body.appendChild(audio);\n\t\t}\n\t}\n}\n\nexport default Audio;\n","import Stage from './Stage';\nimport Audio from './Audio';\n\nclass Inject {\n\tconstructor() {\n\t\tthis.game = null;\n\t\tthis.collidableFactory = null;\n\t\tthis.control = null;\n\t\tthis.puppet = null;\n\t\tthis.scene = null;\n\t\tthis.stage = new Stage();\n\t\tthis.audio = new Audio();\n\t}\n}\n\nexport default new Inject();\n","import Inject from './Inject';\n\nclass Game {\n\tconstructor(){\n\t\tthis.ticks = 0;\n\t\tthis.fps = 30;\n\n\t\t// fps measurement\n\t\tthis.filterStrength = 20;\n\t\tthis.frameTime = 0;\n\t\tthis.lastLoop = new Date\n\t\tthis.thisLoop;\n\t}\n\n\tgameLoop = ()=>{\n\t\tInject.puppet.update();\n\n\t\t// console.log(Inject.scene.updatableMapVisible);\n\t\t// console.warn('0',Inject.scene.updatableMap);\n\t\t// Inject.scene.updatableMapVisible.forEach((object)=>{\n\t\tInject.scene.updatableMap.forEach((object)=>{\n\t\t\tobject.update();\n\t\t});\n\n\t\tthis.ticks++;\n\t\tlet thisFrameTime = (this.thisLoop = new Date) - this.lastLoop;\n\t\tthis.frameTime += (this.thisFrameTime - this.frameTime) / this.filterStrength;\n\t\tthis.lastLoop = this.thisLoop;\n\n\t\t// console.log('fps: '+thisFrameTime);\n\t\t// drawLevel();\n\t\t// updateCharacters();\n\t\t// updateElements();\n\t\t// drawElements();\n\t\t// drawActors();\n\t\t// drawControls();\n\t}\n\n\tnewGame = ()=>{\n\t    window.clearInterval(this.gameInterval);\n\t    // hideMenus()\n\t    // hideControls()\n\t    // // draw initial level for menu background\n\t    // load_level()\n\t    // showStartMenu()\n\t}\n\n\tgameOver(){\n\t\t//meu\n\t\t// sound_dead()\n\t\tif (--Inject.puppet.lives > 0) {\n\t\t\tInject.puppet.respawnPlayer()\n\t\t} else {\n\t\t\tdocument.querySelector('.GameOver').style.display=\"flex\";\n\t\t// todo: dying animation\n\t\t// actors = []\n\t\t\t//showGameOver()\n\t\t}\n\t}\n\n\tplay(){\n\t    // hideMenus();\n\t    // registerControls()\n\t    // initializeLevel()\n\t    // initializeTheme()\n\t    // sound_theme()\n\t\t Inject.scene.constructCollisionMap();\n\t\t // console.log(Inject.scene.updatableMap);\n\t    window.clearInterval(this.gameInterval);\n\t    this.gameInterval = setInterval(this.gameLoop, 1000 / this.fps);\n\t}\n\n\trestart = ()=>{\n\t    window.clearInterval(this.gameInterval);\n\t    // initGame()\n\t    // startGame()\n\t}\n}\n\nexport default Game;\n","import Inject from './Inject';\nimport {boundMethod} from 'autobind-decorator'\n\nvar size = {\n    tile:{ // size of tiles\n        source:{w:16, h:16},\n        target:{w:32, h:32}\n    },\n    tiles:{ // number of tiles\n        target:{w:1, h:1} // this is set dynamically depending on the canvas size\n    },\n    canvas:{w:1, h:1} // the canvas size is read from the actual html\n};\nNumber.prototype.inRange = function (a, b) {\n    var n = +this;\n    return ( n >= a && n <= b );\n};\n\nclass Puppet {\n\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Puppet');\n\t\tthis.ax=0;\n\t\tthis.ay=0;\n\t\tthis.velocity_x=1;\n\t\tthis.velocity_x_jump=1.2;\n\t\tthis.velocity_y=22;\n\t\tthis.friction=0.8;\n\t\tthis.speed_limit_y=10;\n\n\t\tthis._speedX=0;\n\t\tthis.speedY=0;\n\n\t\tthis.lives=3;\n\n\t\tthis.animation('right');\n\t}\n\n\t@boundMethod\n\tanimation(classe){\n\t\tthis.tag.classList = \"Puppet \"+classe;\n\t}\n\n\t@boundMethod\n\tupdate(){\n\t\tthis.ax = this.x;\n\t\tthis.ay = this.y;\n\n\t\tif(Inject.control.shift){\n\t\t\tthis.velocity_x=2;\n\t\t\tthis.velocity_x_jump=2.2;\n\t\t}else{\n\t\t\tthis.velocity_x=1;\n\t\t\tthis.velocity_x_jump=1.2;\n\t\t}\n\n\t\t// this.tag.style.backgroundPosition = \"-209px 0\";\n\n\t\tif(!Inject.control.right && !Inject.control.left){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('left');\n\t\t\t}else{\n\t\t\t\tthis.animation('right');\n\t\t\t}\n\t\t}\n\t\tif (Inject.control.up) {\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('lookup-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('lookup-right');\n\t\t\t}\n\t\t}\n\t\tif(Inject.control.down) {\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('lower-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('lower-right');\n\t\t\t}\n\t\t}\n\t\tif (this.speedY == 0) {\n\t\t\tif (Inject.control.left) {\n\t\t\t\t// if(this.speedX > 0){\n\t\t\t\t// \tconsole.warn('run with SMOKE left');\n\t\t\t\t// }else{\n\t\t\t\t// }\n\t\t\t\tthis.animation('walk-left');\n\t\t\t\tthis.speedX -= this.velocity_x;\n\t\t\t} else if (Inject.control.right) {\n\t\t\t\t// if(this.speedX < 0){\n\t\t\t\t// \tconsole.warn('run with SMOKE right');\n\t\t\t\t// }else{\n\t\t\t\t// }\n\t\t\t\tthis.animation('walk-right');\n\t\t\t\tthis.speedX += this.velocity_x;\n\t\t\t}\n\t\t}else {\n\t\t\tif (Inject.control.left) {\n\t\t\t\tthis.speedX -= this.velocity_x_jump;\n\t\t\t} else if (Inject.control.right) {\n\t\t\t\tthis.speedX += this.velocity_x_jump;\n\t\t\t}\n\t\t}\n\t\tif (Inject.control.a && this.speedY == 0) {\n\t\t\tthis.jump();\n\t\t}\n\n\t\tif(this.speedY < 0){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('jumping-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('jumping-right');\n\t\t\t}\n\t\t}else if(this.speedY > 0){\n\t\t\tif (this.speedX < 0) {\n\t\t\t\tthis.animation('falling-left');\n\t\t\t}else{\n\t\t\t\tthis.animation('falling-right');\n\t\t\t}\n\t\t}\n\n\n\t\t// apply gravity.\n\t\tthis.speedY += Inject.scene.gravity;\n\t\tif (Math.abs(this.speedY) < 0.1) this.speedY = 0;\n\n\t\t// apply speed limit when falling down\n\t\tif (this.speedY > this.speed_limit_y) {\n\t\t\tthis.speedY = this.speed_limit_y;\n\t\t}\n\n\t\tthis.ax += this.speedX;\n\t\tthis.ay += this.speedY;\n\n\t\t// block on level edge\n\t\tif (this.ax < 0) {\n\t\t\tthis.ax = 0;\n\t\t} else if (this.ax + this.width > Inject.scene.width) {\n\t\t\tthis.ax = Inject.scene.width - this.width;\n\t\t}\n\t\t// die on level bottom\n\t\tif (this.ay > Inject.scene.height) {\n\t\t\tInject.game.gameOver();\n\t\t}\n\n\t\t// add visible items + actors to collision check\n\t\t// todo: only add visible items\n\t\tInject.scene.getCollisionMapVisible().forEach((object)=>{\n\t\t\tconst collisions = object.collides(this);\n\t\t\t// console.log(collisions);\n\n\t\t\tif(object.scenario){\n\t\t\t\tif (collisions.top && object.border.bottom=='solid') {\n\t\t\t\t\tthis.ay = object.y + this.height;// + size.tile.target.h;\n\t\t\t\t\tthis.speedY = 1;\n\t\t\t\t}\n\t\t\t\t// console.log(collisions.bottom, 'colide', object.border.top=='solid')\n\t\t\t\tif (collisions.bottom &&\n\t\t\t\t\t\t(object.border.top=='solid' ||\n\t\t\t\t\t\t\t(object.border.top=='platform' ))){//&& this.speedY > 0))) {\n\t\t\t\t\t\t\t\t// console.log('colide')\n\t\t\t\t\tthis.ay = object.y - this.height;\n\t\t\t\t\tthis.speedY = 0;\n\t\t\t\t}\n\t\t\t\tif (collisions.right && object.border.horizontal=='solid' && this.speedX > 0) {\n\t\t\t\t\tthis.ax = object.x - this.width;\n\t\t\t\t\tthis.speedX = 0;\n\t\t\t\t}\n\t\t\t\tif (collisions.left && object.border.horizontal=='solid' && this.speedX < 0) {\n\t\t\t\t\tthis.ax = object.x + object.width;\n\t\t\t\t\tthis.speedX = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(object.enemy || object.item){\n\t\t\t\t// console.log(object);\n\t\t\t\tobject.collide(this, collisions);\n\t\t\t}\n\t\t});\n\n\n\t  // move the player when the level is at it's border, else move the level\n\t  if (Inject.scene.scroll_x <= 0) {\n         if (this.ax > (Inject.stage.width / 2)) {\n             Inject.scene.scroll_x = 1;\n         }\n     } else if (Inject.scene.scroll_x >= Inject.scene.width - Inject.stage.width && Inject.scene.width > Inject.stage.width) {\n         Inject.scene.scroll_x = Inject.scene.width - Inject.stage.width;\n         if (this.ax < Inject.scene.width - (Inject.stage.width / 2)) {\n             Inject.scene.scroll_x = Inject.scene.width - Inject.stage.width - 1;\n         }\n     } else if (Inject.scene.width > Inject.stage.width) {\n\t\t\tif(this.ax > Inject.scene.line_to_scroll){\n\t\t\t\tInject.scene.scroll_x = this.ax-Inject.scene.line_to_scroll;\n\t\t\t}\n     }\n\n\t  \t// apply friction\n\t\tthis.speedX *= this.friction;\n\n\t\tthis.x = this.ax;\n\t\tthis.y = this.ay;\n\t}\n\n\t@boundMethod\n\tjump(){\n\t\tconsole.log('puppet jump', this)\n\t\tInject.control.releaseA();\n\t\tthis.speedY -= this.velocity_y;\n\t}\n\n\t@boundMethod\n\tdie(){\n\t\tInject.game.newGame();\n\n\t\tif (this.speedX < 0) {\n\t\t\tthis.animation('dying-left');\n\t\t}else{\n\t\t\tthis.animation('dying-right');\n\t\t}\n\n\t\tsetTimeout(()=>{\n\t\t\tInject.game.gameOver();\n\t\t\tInject.game.play();\n\t\t}, 1000);\n\t}\n\n\t@boundMethod\n\tlower(){\n\n\t}\n\n\n\n\n\t// todo: re-spawn player at the closest 'y' to the left\n\t@boundMethod\n\trespawnPlayer(){\n\t    // if (startpos = getLastLevelSpritePosition('y', this.x)) {\n\t    //     this.x = startpos.x * size.tile.target.w\n\t    //     if (this.x >= Inject.stage.width/2) {\n\t    //         Scene.scroll_x = startpos.x * size.tile.target.w - Inject.stage.width/2\n\t    //     } else {\n\t    //         Scene.scroll_x = 0\n\t    //     }\n\t    //     this.y = (startpos.y + line_offset_y) * size.tile.target.h\n\t    // } else {\n\t\t this.speedX = 0;\n\t\t this.speedY = 0;\n\t\t this.x = 40;\n\t\t this.y = 0;\n\t\t Inject.scene.scroll_x = 0\n\t\t Inject.scene.x = 0\n\t\t this.animation('right');\n\t}\n\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseFloat(x.toFixed(1));\n\t\tif(x != this.x){\n\t\t\t// console.log('x', x, 'velocity_x',  this.velocity_x);\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseFloat(y.toFixed(1));\n\t\tif(y != this.y){\n\t\t\t// console.log(y);\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\tget speedX (){ return this._speedX; }\n\tset speedX (speedx){ this._speedX = parseFloat(speedx.toFixed(1)); }\n\n\tget width (){ return this.tag.offsetWidth; }\n\tget height (){ return this.tag.offsetHeight; }\n}\n\nexport {Puppet as default};\n","import Inject from '~/engine/Inject';\nimport Puppet from '~/engine/Puppet';\nimport {boundMethod} from 'autobind-decorator'\n\nlet jumpSound = require('../sounds/jump.wav');\n\nclass Mario extends Puppet{\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\t@boundMethod\n\tjump(){\n\t\tsuper.jump();\n\t\tInject.audio.play(jumpSound);\n\t\tconsole.log('mario, jump!');\n\t}\n\n\n\n}\n\nexport default Mario;\n","class ControlBase {\n\tconstructor(){\n\t\tthis.keys = {\n\t\t};\n\t\tdocument.addEventListener(\"keydown\", (e)=>{\n\t\t\tif(!e.repeat){\n\t\t\t\tthis.keys[this.translateKeyboard(e.key)] = true;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener(\"keyup\", (e)=>{\n\t\t\tif(!e.repeat){\n\t\t\t\tthis.keys[this.translateKeyboard(e.key)] = false;\n\t\t\t}\n\t\t});\n\t}\n\n\ttranslateKeyboard  = (key)=>{\n\t\treturn '';\n\t}\n}\n\nexport default ControlBase;\n","import ControlBase from '~/engine/ControlBase';\n\nclass Control extends ControlBase{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.keys = {\n\t\t\tup: false,\n\t\t\tright: false,\n\t\t\tdown: false,\n\t\t\tleft: false,\n\t\t\ta: false,\n\t\t\tshift: false\n\t\t};\n\t}\n\n\tget up(){ return this.keys.up; }\n\tget right(){ return this.keys.right; }\n\tget down(){ return this.keys.down; }\n\tget left(){ return this.keys.left; }\n\tget a(){ return this.keys.a; }\n\tget shift(){ return this.keys.shift; }\n\n\tpressA=()=>{ this.keys.a = true;}\n\treleaseA=()=>{ this.keys.a = false;}\n\n\ttranslateKeyboard  = (key)=>{\n\t\tif(key == \"ArrowUp\") return 'up';\n\t\tif(key == \"ArrowRight\") return 'right';\n\t\tif(key == \"ArrowDown\") return 'down';\n\t\tif(key == \"ArrowLeft\") return 'left';\n\t\tif(key == \"a\" || key == \"A\" ) return 'a';\n\t\tif(key == \"Shift\" ) return 'shift';\n\t\treturn '';\n\t}\n}\n\nexport default Control;\n","import Inject from './Inject';\nimport {boundMethod} from 'autobind-decorator'\n\nclass Collidable {\n\tconstructor(tag) {\n\t\tthis.tag = tag;\n\t\tthis.solid = this.tag.classList.contains('solid');\n\t\tthis.platform = this.tag.classList.contains('platform');\n\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t\tif(this.platform){\n\t\t\tthis.border.top='platform';\n\t\t\tthis.border.bottom=false;\n\t\t\tthis.border.horizontal=false;\n\t\t}\n\n\t\tthis.ax=0;\n\t\tthis.ay=0;\n\t\tthis.speedX=0;\n\t\tthis.speedY=0;\n\t\tthis.velocity_x=1;\n\t\tthis.speed_limit_x=4;\n\t\tthis.friction=0.8;\n\n\t\tthis.type = 'scenario';\n\t\tthis.updatable = false;\n\t\tthis.affectedByGravity = false;\n\t\tthis.collideWithTheScene = false;\n\t\t// console.warn('3', this)\n\t}\n\n\t@boundMethod\n\tcollide(from, collisions){\n\t\t// if (collisions.top && this.border.bottom=='solid') {\n\t\t// \t  from.ay = this.y + from.height;// + size.tile.target.h;\n\t\t// \t  from.speedY = 1;\n\t\t// }\n\t\t// if (collisions.bottom){\n\t\t// \tif(this.border.top=='solid') {\n\t\t// \t\tfrom.ay = this.y - from.height;\n\t\t// \t\tfrom.speedY = 0;\n\t\t// \t}else if(this.border.top=='platform') {\n\t\t// \t\tif(from.speedY > 0){\n\t\t// \t\t\tfrom.ay = this.y - from.height;\n\t\t// \t\t\tfrom.speedY = 0;\n\t\t// \t \t}\n\t\t//  \t}\n\t\t// }\n\t\t// if (collisions.right && this.border.horizontal=='solid' && from.speedX > 0) {\n\t\t// \tif(from.border && from.border.horizontal=='elastic') {\n\t\t// \t\tfrom.speedX *= -1;\n\t\t// \t}else{\n\t\t// \t\tfrom.ax = this.x - from.width;\n\t\t// \t\tfrom.speedX = 0;\n\t\t// \t}\n\t\t// }\n\t\t// if (collisions.left && this.border.horizontal=='solid' && from.speedX < 0) {\n\t\t// \tif(from.border && from.border.horizontal=='elastic') {\n\t\t// \t\tfrom.speedX *= -1;\n\t\t// \t}else{\n\t\t// \t\tfrom.ax = this.x + this.width;\n\t\t// \t\tfrom.speedX = 0;\n\t\t// \t}\n\t\t// }\n\t}\n\n\t@boundMethod\n\tcollides(from){\n\t\tlet collisions = {top:false, bottom:false, left:false, right:false};\n\t\t// we are below or above an object (use the middle of the actor, with tolerance)\n\t\tif ((from.ax + from.width / 2).inRange(this.x - 0.25, this.x + this.width + 1.25)) {\n\t\t\t// check bounce bottom:\n\t\t\tif ((from.ay + from.height).inRange(this.y, this.y + this.height - 1) ){//&& from.ay < this.y) {\n\t\t\t\tcollisions.bottom = true;\n\t\t\t// check bounce top:\n\t\t\t} else if (from.ay.inRange(this.y, this.y + this.height)) {\n\t\t\t\tcollisions.top = true;\n\t\t\t}\n\t\t}\n\t\t// we are right or left of an object\n\t\tif ((from.ay + from.height / 2).inRange(this.y - 0.25, this.y + this.height + 1.25)) {\n\t\t\t// check bounce right\n\t\t\tif ((from.ax + from.width).inRange(this.x, this.x + this.width)) {\n\t\t\t\tcollisions.right = true;\n\t\t\t}\n\t\t\t// check bounce left\n\t\t\tif (from.ax.inRange(this.x, this.x + this.width)) {// + this.width)) {\n\t\t\t\tcollisions.left = true;\n\t\t\t}\n\t\t}\n\t\treturn collisions;\n\t}\n\n\t@boundMethod\n\tupdate(){\n\t\t// console.warn('2', this)\n\t\tif(this.updatable){\n\t\t\t// console.log('koopa tick');\n\t\t\tthis.ax = this.x;\n\t\t\tthis.ay = this.y;\n\n\t\t\tthis.ax += this.speedX;\n\n\t\t\tif(this.affectedByGravity){\n\t\t\t\tthis.speedY += Inject.scene.gravity;\n\t\t\t\tif (Math.abs(this.speedY) < 0.2) this.speedY = 0;\n\n\t\t\t\tif (this.speedY > this.speed_limit_y) {\n\t\t\t\t\tthis.speedY = this.speed_limit_y;\n\t\t\t\t}\n\n\t\t\t\tthis.ay += this.speedY;\n\t\t\t}\n\n\t\t\tif(this.collideWithTheScene){\n\t\t\t\tInject.scene.sceneMap.forEach((object)=>{\n\t\t\t\t\tconst collisions = object.collides(this);\n\t\t\t\t\tobject.collide(this, collisions);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.x = this.ax;\n\t\t\tthis.y = this.ay;\n\t\t}\n\t}\n\n\tget scenario (){ return this.type == 'scenario'; }\n\tget enemy (){ return this.type == 'enemy'; }\n\tget item (){ return this.type == 'item'; }\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseFloat(x.toFixed(1));\n\t\tif(x != this.x){\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseFloat(y.toFixed(1));\n\t\tif(y != this.y){\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\n\tget width (){ return this.tag.offsetWidth; }\n\tget height (){ return this.tag.offsetHeight; }\n}\n\nexport {Collidable as default};\n","import Inject from '~/engine/Inject';\nimport Collidable from '~/engine/Collidable';\nimport {boundMethod} from 'autobind-decorator'\n\nclass KoopaTroopaShell extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.ax=0;\n\t\tthis.ay=0;\n\t\tthis.velocity_x=5;\n\n\t\tthis.updatable = true;\n\t\tthis.affectedByGravity = false;\n\t\tthis.collideWithTheScene = true;\n\t\tthis.type = 'enemy';\n\t}\n\n\t@boundMethod\n\tanimation(classe){\n\t\tthis.tag.classList.add(classe);\n\t}\n\n\t@boundMethod\n\tcollide(from, collisions){\n\t\t// TODO: implementar algoritmo de elasticidade\n\t\tif(collisions.bottom){\n\t\t\tInject.control.pressA();\n\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.tag.parentNode.removeChild(this.tag)\n\t\t\t},100)\n\t\t}\n\n\t\tif(collisions.right || collisions.left){\n\n\t\t\tthis.animation('animated');\n\n\t\t\tif(from.speedX > 0.2)\n\t\t\t\tthis.speedX = this.velocity_x;\n\t\t\telse if(from.speedX < -0.2)\n\t\t\t\tthis.speedX = -this.velocity_x;\n\t\t\telse\n\t\t\t\tfrom.die();\n\t\t\t\t//console.error('dead');\n\t\t}\n\t}\n\n\t// @boundMethod\n\t// update(){\n\t// \tthis.ax = this.x;\n\t// \tthis.ay = this.y;\n\t//\n\t// \t// apply gravity.\n\t// \tthis.speedY += Inject.scene.gravity;\n\t// \tif (Math.abs(this.speedY) < 0.1) this.speedY = 0;\n\t//\n\t// \t// apply speed limit when falling down\n\t// \tif (this.speedY > this.speed_limit_y) {\n\t// \t\tthis.speedY = this.speed_limit_y;\n\t// \t}\n\t//\n\t// \tthis.ax += this.speedX;\n\t// \tthis.ay += this.speedY;\n\t//\n\t// \tInject.scene.sceneMap.forEach((object)=>{\n\t// \t\tconst collisions = object.collisions(this);\n\t// \t\tobject.collide(this, collisions);\n\t// \t});\n\t//   \t// apply friction\n\t// \t// this.speedX *= this.friction;\n\t//\n\t// \tthis.x = this.ax;\n\t// \tthis.y = this.ay;\n\t// }\n}\n\nexport {KoopaTroopaShell as default};\n","import Inject from '~/engine/Inject';\nimport Collidable from '~/engine/Collidable';\nimport {boundMethod} from 'autobind-decorator'\n\n//https://www.mariowiki.com/Koopa_Troopa\nclass KoopaTroopa extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tright: 'deadly',\n\t\t\tbottom: 'deadly',\n\t\t\tleft: 'deadly'\n\t\t}\n\n\t\tthis.ax=0;\n\t\tthis.ay=0;\n\t\t// this.speedX=1;\n\t\tthis.speedY=0;\n\t\t// this.velocity_x=1;\n\t\t// this.speed_limit_y=2;\n\t\t// this.friction=0.8;\n\t\tthis.updatable = true;\n\t\tthis.type = 'enemy';\n\n\n\t\t// .walking-r\n\t\t// .walking-l\n\t\t// .angry-beach-walking-r\n\t\t// .angry-beach-walking-l\n\t\t// .beach-walking-r\n\t\t// .beach-walking-l\n\t\t// .angry-falling-beach-walking-r\n\t\t// .angry-falling-beach-walking-l\n\t\t// .crushed\n\t}\n\n\t@boundMethod\n\tcollide(from, collisions){\n\t\t// TODO: implementar algoritmo de elasticidade\n\t\tconsole.log(collisions.bottom, collisions.top)\n\t\tif(collisions.bottom){\n\t\t\tInject.control.pressA();\n\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.tag.parentNode.removeChild(this.tag)\n\t\t\t},100)\n\t\t}else if(collisions.right || collisions.left){\n\t\t\tfrom.die();\n\t\t}\n\t}\n\n\t// @boundMethod\n\t// update(){\n\t// \t// console.log('koopa tick');\n\t// \tthis.ax = this.x;\n\t// \tthis.ay = this.y;\n\t//\n\t// \t// apply gravity.\n\t// \tthis.speedY += Inject.scene.gravity;\n\t// \tif (Math.abs(this.speedY) < 0.1) this.speedY = 0;\n\t//\n\t// \t// apply speed limit when falling down\n\t// \tif (this.speedY > this.speed_limit_y) {\n\t// \t\tthis.speedY = this.speed_limit_y;\n\t// \t}\n\t//\n\t// \tthis.ax += this.speedX;\n\t// \tthis.ay += this.speedY;\n\t//\n\t// \tInject.scene.sceneMap.forEach((object)=>{\n\t// \t\tconst collisions = object.collisions(this);\n\t// \t\tobject.collide(this, collisions);\n\t// \t});\n\t//   \t// apply friction\n\t// \t// this.speedX *= this.friction;\n\t//\n\t// \tthis.x = this.ax;\n\t// \tthis.y = this.ay;\n\t// }\n}\n\nexport {KoopaTroopa as default};\n","import Collidable from '~/engine/Collidable';\nimport Inject from '~/engine/Inject';\nimport {boundMethod} from 'autobind-decorator'\n\nclass Question extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.disabled = false;\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t\tthis.shouldReleaseYoshi = tag.classList.contains('releaseYoshi');\n\n\t\tthis.type = 'item';\n\t}\n\n\t@boundMethod\n\tdisable(){\n\t\tthis.disabled = true;\n\t\tthis.tag.style.backgroundPosition = '-257px -97px';\n\t\tthis.tag.style.animation = 'none';\n\t}\n\n\t@boundMethod\n\treleaseCoin(){\n\t\tconst coin = document.createElement('div');\n\t\tcoin.className = 'Object Coin';\n\t\tcoin.style.left= this.x+'px';\n\t\tcoin.style.top= (this.y-16)+'px';\n\t\tInject.scene.addTag(coin);\n\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\tcoin.style.top += (coin.style.offsetTop+1)+'px';\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tcoin.style.opacity=0;\n\t\t\tcoin.parentNode.removeChild(coin);\n\t\t}, 260);\n\t}\n\n\t@boundMethod\n\treleaseYoshi(){\n\t\tconst coin = document.createElement('div');\n\t\tcoin.className = 'Plant Egg';\n\t\tcoin.style.left= this.x+'px';\n\t\tcoin.style.top= (this.y-16)+'px';\n\t\tInject.scene.addTag(coin);\n\n\t\tlet i = 0;\n\t\tlet interval;\n\t\tinterval = setInterval(()=>{\n\t\t\tconsole.log(coin.offsetTop);\n\t\t\ti++;\n\t\t\tif(i<2){\n\t\t\t\tcoin.style.top = (coin.offsetTop-1)+'px';\n\t\t\t}\n\t\t\tif(i>8){\n\t\t\t\tcoin.style.top = (coin.offsetTop+1)+'px';\n\t\t\t}\n\t\t\tif(i>20){\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 15);\n\t}\n\n\t@boundMethod\n\tcollide(from, collisions){\n\t\tsuper.collide(from, collisions);\n\n\t\tif (!this.disabled && collisions.top && this.border.bottom=='solid') {\n\t\t\tlet i = 0;\n\t\t\tlet interval;\n\t\t\tinterval = setInterval(()=>{\n\t\t\t\ti++;\n\t\t\t\tif(i<10){\n\t\t\t\t\tthis.y -= 1;\n\t\t\t\t}\n\t\t\t\tif(i==10){\n\t\t\t\t\tif(this.shouldReleaseYoshi){\n\t\t\t\t\t\tthis.releaseYoshi();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.releaseCoin();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(i>10){\n\t\t\t\t\tthis.y += 1;\n\t\t\t\t}\n\t\t\t\tif(i>=20){\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tthis.disable();\n\t\t\t\t}\n\t\t\t}, 5);\n\t\t}\n\t}\n}\n\nexport {Question as default};\n","import Collidable from '~/engine/Collidable';\nimport Inject from '~/engine/Inject';\nimport {boundMethod} from 'autobind-decorator'\n\nclass Rotation extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\n\t\tthis.disabled = false;\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t\tthis.static = tag.classList.contains('static');\n\n\t\tthis.type = 'item';\n\t}\n\n\t@boundMethod\n\trotate(){\n\t\tthis.tag.classList.add('Rotation');\n\t\tthis.border = {\n\t\t\ttop: false,\n\t\t\tbottom: false,\n\t\t\thorizontal: false\n\t\t}\n\t}\n\n\t@boundMethod\n\tstop(){\n\t\tthis.tag.classList.remove('Rotation');\n\t\tthis.border = {\n\t\t\ttop: 'solid',\n\t\t\tbottom: 'solid',\n\t\t\thorizontal: 'solid'\n\t\t}\n\t}\n\n\t@boundMethod\n\tdisable(){\n\t\tthis.disabled = true;\n\t\tthis.tag.style.backgroundPosition = '-257px -97px';\n\t\tthis.tag.style.animation = 'none';\n\t}\n\n\t@boundMethod\n\tcollide(from, collisions){\n\t\tsuper.collide(from, collisions);\n\n\t\tif (!this.disabled && collisions.top && this.border.bottom=='solid') {\n\t\t\tif(this.static){\n\t\t\t\tthis.disable();\n\t\t\t}else{\n\t\t\t\tthis.rotate();\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tthis.stop();\n\t\t\t\t},5000);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport {Rotation as default};\n","import Collidable from '~/engine/Collidable';\nimport Inject from '~/engine/Inject';\nimport {boundMethod} from 'autobind-decorator'\n\nclass Switch extends Collidable{\n\tconstructor(tag) {\n\t\tsuper(tag);\n\t\tthis.updatable = true;\n\t\tthis.type = 'item';\n\t}\n}\n\nexport {Switch as default};\n","import Collidable from './Collidable';\n\nclass CollidableFactoryBase {\n\tconstructor(){\n\t}\n\n\tfrom(tag){\n\t\treturn new Collidable(tag);\n\t}\n}\n\nexport {CollidableFactoryBase as default};\n","import KoopaTroopaShell from './Enemy/KoopaTroopaShell';\nimport KoopaTroopa from './Enemy/KoopaTroopa';\n\nimport Question from './Item/Question';\nimport Rotation from './Item/Rotation';\nimport Switch from './Item/Switch';\n\nimport CollidableFactoryBase from '~/engine/CollidableFactoryBase';\n\nclass CollidableFactory extends CollidableFactoryBase{\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\tfrom(tag){\n\t\tif(tag.classList.contains('KoopaTroopaShell')){\n\t\t\treturn new KoopaTroopaShell(tag);\n\t\t}\n\t\tif(tag.classList.contains('KoopaTroopa')){\n\t\t\treturn new KoopaTroopa(tag);\n\t\t}\n\t\tif(tag.classList.contains('Question')){\n\t\t\treturn new Question(tag);\n\t\t}\n\t\tif(tag.classList.contains('Plate')){\n\t\t\treturn new Rotation(tag);\n\t\t}\n\t\tif(tag.classList.contains('Switch')){\n\t\t\treturn new Switch(tag);\n\t\t}\n\t\treturn super.from(tag);\n\t}\n}\n\nexport {CollidableFactory as default};\n","import Inject from './Inject';\n\nclass SceneBase {\n\tconstructor() {\n\t\tthis.tag = document.querySelector('.Scene');\n\n\t\tthis.gravity=3;\n\n\t\tthis.line_to_scroll = 128;\n\t\tthis._scroll_x = 0;\n\t\tthis.scroll_x_start = 0;\n\n\t\tthis.collisionMap = [];\n\t\tthis.updatableMap = [];\n\t\tthis.sceneMap = [];\n\t}\n\n\tconstructCollisionMap=()=>{\n\t\tthis.collisionMap = [];\n\t\tthis.updatableMap = [];\n\t\tthis.sceneMap = [];\n\n\t\tdocument.querySelectorAll('.Collidable').forEach((object)=>{\n\t\t\tobject = Inject.collidableFactory.from(object);\n\t\t\tthis.collisionMap.push(object);\n\t\t\tif(object.updatable){\n\t\t\t\tthis.updatableMap.push(object);\n\t\t\t}\n\t\t\tif(object.solid || object.platform){\n\t\t\t\tthis.sceneMap.push(object);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCollisionMapVisible=()=>{\n\t\treturn this.collisionMap;\n\t\t\n\t\tvar visible = []\n\n\t\tthis.collisionMap.forEach(co=>{\n\t\t\tif(co.x > (Math.abs(this.x) - 30) && co.x < (Math.abs(this.x)+Inject.stage.width+30))\n\t\t\t\tvisible.push(co);\n\t\t});\n\t\t// console.log(visible);\n\t\t// console.log(Math.abs(this.x), Math.abs(this.x)+Inject.stage.width);\n\t\treturn visible;\n\t}\n\n\taddTag=(tag)=>{\n\t\tthis.tag.appendChild(tag);\n\t}\n\n\tget updatableMapVisible(){\n\n\t\t// console.log(this.updatableMap);\n\n\t\t// console.log(this.updatableMap);\n\n\t\treturn [];\n\t}\n\n\tget scroll_x(){\n\t\treturn this._scroll_x;\n\t}\n\tset scroll_x(scroll){\n\t\tthis.x = -scroll;\n\t\tthis._scroll_x = scroll;\n\t}\n\n\tget width (){ return this.tag.clientWidth; }\n\tget height (){ return this.tag.clientHeight; }\n\n\tget x (){ return this.tag.offsetLeft; }\n\tset x (x){\n\t\tx = parseInt(x);\n\t\tif(x != this.x){\n\t\t\tthis.tag.style.left = x + 'px';\n\t\t}\n\t}\n\n\tget y (){ return this.tag.offsetTop; }\n\tset y (y){\n\t\ty = parseInt(y);\n\t\tif(y != this.y){\n\t\t\tthis.tag.style.top = y + 'px';\n\t\t}\n\t}\n\n}\n\nexport default SceneBase;\n","import SceneBase from '~/engine/SceneBase';\n\nclass YoshisIsland2 extends SceneBase {\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default YoshisIsland2;\n","import Inject from '~/engine/Inject';\nimport {boundMethod} from 'autobind-decorator'\n\nlet stageSound = require('../sounds/overworldbgm.mp3');\n\nimport Game from '~/engine/Game';\n\nimport Mario from './Mario';\nimport Control from './Control';\nimport CollidableFactory from './CollidableFactory';\nimport YoshisIsland2 from './Stage/YoshisIsland2';\n\nclass SuperMarioWord extends Game {\n\tconstructor(){\n\t\tsuper();\n\n\t\tInject.puppet = new Mario();\n\t\tInject.scene = new YoshisIsland2();\n\t\tInject.collidableFactory = new CollidableFactory();\n\t\tInject.control = new Control();\n\n\t\tInject.game = this;\n\t}\n\n\t@boundMethod\n\tplay(){\n\t\tsuper.play();\n\t\tInject.audio.playBackground(stageSound);\n\t}\n\n\t@boundMethod\n\tgameOver(){\n\t\tsuper.gameOver();\n\t\tInject.audio.stopBackground();\n\t}\n}\n\nexport default new SuperMarioWord();\n","import SuperMarioWord from './src/SuperMarioWorld';\n\n//\n\nSuperMarioWord.play();\n\ndocument.querySelector('.Stage').addEventListener('click', ()=>{\n});\n"]}